#!/usr/bin/env node
/* eslint no-var: false */
var path = require('path');
var yargs = require('yargs');
var escape = require('escape-regex-string');

function ignore(filepath) {
  var str = escape(path.join.apply(path, filepath));
  return new RegExp('^' + str);
}

require('babel/register')({
  ignore: [
    ignore([path.dirname(__dirname), 'node_modules']),
    ignore([process.cwd(), 'node_modules'])
  ]
});

var argv = yargs
  .usage('Usage: $0 [options] <path to module>')
  .option('o', {
    alias: 'output',
    describe: 'Output compiled CSS to specified file instead of to stdout',
    type: 'string'
  })
  .demand(1, 'A path to a module must be provided')
  .wrap(null)
  .example('$0 -o app.css src/styles.js', 'Compile src/styles.js to app.css')
  .example('$0 -o style.css style', 'Compile style/index.js to style.css')
  .help('h')
  .version(function() {
    return require('../package').version;
  })
  .alias('h', 'help')
  .alias('v', 'version')
  .argv;

var compile = require('../src');

compile({file: argv._[0], output: argv.output}, function (err, css) {
  if (err) {
    console.error(err.stack);
    return process.exit(1);
  } else if (!argv.output) {
    console.log(css);
  }
  process.exit(0);
});
